library(ggplot2)
data(diamonds)
names(diamonds)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
library(scales)
cuberoot_trans = function() trans_new('cuberoot',
transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point()
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point(position='jitter',size=0.75,alpha=1/2) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point()
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point()
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
setwd("~/Documents/Workspace/Python/DataAnalysisR/facebook")
fp = read.csv('pseudo_facebook.tsv',sep='\t')
summary(fp)
head(fp)
pf <- read.csv('pseudo_facebook.tsv',sep='\t')
by(pf$friend_count,pf$gender,summary)
library(ggplot2)
ggplot(aes(x = tenure/365), data =pf) + geom_histogram(binwidth = 0.25,color = 'black', fill = '#099DD9') + scale_x_continuous(breaks = seq(1,7,1) , limits = c(0,7)) + xlab('Number of years using Facebook') + ylab('Number of users in sample')
ggplot(aes(x = age), data =pf) + geom_histogram(binwidth=1) + scale_x_discrete(breaks=c(0,113,5))
grid.arrange(pl,p2,pl3,ncol=1)
library(gridExtra)
pl = ggplot(aes(x = friend_count), data = pf) + geom_histogram()
pl2 = pl + scale_x_log10()
pl3 = pl + scale_x_sqrt()
grid.arrange(pl,p2,pl3,ncol=1)
grid.arrange(pl,pl2,pl3,ncol=1)
ggplot(aes(x =www_likes, y = ..count../sum(..count..)),
data = subset(pf, !is.na(gender))) + geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0,500), breaks = seq(0,500,50))+
xlab('count for www_likes') + ylab('ratio on which gender')
by(pf$www_likes,pf$gender,sum)
by(pf$www_likes,pf$gender,sum)
by(pf$friendships_initiated, pf$gender, summary)
ggplot(aes(y = friendships_initiated, x = gender), data = subset(pf, !is.na(gender))) +
geom_boxplot()  + coord_cartesian(ylim = c(0,150))
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
