nci <- read.table("nci.tsv")
names(nci)
nci <- read.table("nci.tsv")
getwd()
setwd("~/Documents/Workspace/Python/DataAnalysisR/lesson5")
nci <- read.table("nci.tsv")
names(nci)
colnames(nci) <- c(1:64)
head(nci)
library(reshape2)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp)
str(nci.long.samp)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
str(nci.long.samp)
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
library(ggplot2)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
library(ggplot2)
data(diamonds)
ggplot(aes(y=prices),
data = diamonds)+
geom_histogram()+
scale_fill_brewer(type='qual')
ggplot(aes(y=price),
data = diamonds)+
geom_histogram()+
scale_fill_brewer(type='qual')
ggplot(aes(y=price),
data = diamonds)+
facet_wrap(~color)
geom_histogram()+
scale_fill_brewer(type='qual')
ggplot(aes(y=price),
data = diamonds)+
facet_wrap(~color)
geom_histogram()+
scale_fill_brewer(type='qual')
ggplot(aes(x=price),
data = diamonds)+
facet_wrap(~color)
geom_histogram()+
scale_fill_brewer(type='qual')
ggplot(aes(x=price),
data = diamonds)+
facet_wrap(~color)+
geom_histogram()+
scale_fill_brewer(type='qual')
ggplot(aes(x=price),
data = diamonds)+
facet_wrap(~color)+
scale_fill_brewer(type='qual')+
geom_histogram()
ggplot(aes(x=price),
data = diamonds)+
facet_wrap(~color)+
scale_fill_brewer(type='qual')+
geom_histogram(aes(color=cut))
ggplot(aes(x=price),
data = diamonds)+
facet_wrap(~color)+
geom_histogram(aes(color=cut))+
scale_fill_brewer(type='qual')
ggplot(aes(x=price),
data = diamonds)+
facet_wrap(~color)+
geom_histogram(aes(fill=cut))+
scale_fill_brewer(type='qual')
str(diamonds)
ggplot(aes(x=table,y=price),
data = diamonds)+
geom_point(aes(color=cut))
ggplot(aes(x=table,y=price),
data = diamonds)+
geom_point(aes(fill=cut))
ggplot(aes(x=table,y=price),
data = diamonds)+
geom_point(aes(color=cut))
ggplot(aes(x=table,y=price),
data = diamonds)+
geom_point(aes(color=cut))+
scale_color_brewer(type='qual')
# Create a scatterplot of diamond price vs.
# volume (x * y * z) and color the points by
# the clarity of diamonds. Use scale on the y-axis
# to take the log10 of price. You should also
# omit the top 1% of diamond volumes from the plot.
# Note: Volume is a very rough approximation of
# a diamond's actual volume.
# The plot should look something like this.
# http://i.imgur.com/excUpea.jpg
ggplot(aes(x=x*y*z,y=price),
data=diamonds)+
geom_point(aes(color=clarity))+
scale_y_log10()+
scale_color_brewer(type='div')
?xlim
ggplot(aes(x=x*y*z,y=price),
data=diamonds)+
geom_point(aes(color=clarity))+
scale_y_log10()+
xlim(0,quantile(x*y*z,0.99))
scale_color_brewer(type='div')
ggplot(aes(x=x*y*z,y=price),
data=diamonds)+
geom_point(aes(color=clarity))+
scale_y_log10()+
xlim(0,quantile(x*y*z,0.99))+
scale_color_brewer(type='div')
ggplot(aes(x=x*y*z,y=price),
data=diamonds)+
geom_point(aes(color=clarity))+
scale_y_log10()+
xlim(0,quantile(x,0.99))+
scale_color_brewer(type='div')
diamonds <- transform(diamonds,volume=x*y*z)
ggplot(aes(x=volume,y=price),
data=diamonds)+
geom_point(aes(color=clarity))+
scale_y_log10()+
xlim(0,quantile(diamonds$volume,0.99))+
scale_color_brewer(type='div')
pf <- read.csv('../lesson3/pseudo_facebook',sep='\t')
getwd()
pf <- read.csv('../lesson3/pseudo_facebook.tsv',sep='\t')
names(pf)
pf <- transform(pf, props_initiated=friendships_initiated-friend_count)
pf <- transform(pf, prop_initiated=friendships_initiated/friend_count)
pf <- transform(pf,year_joined=floor(2014-tenure/365))
pf <- transform(pf, year_joined.bucket = cut(year_joined,c(2004,2009,2011,2012,2014)))
table(pf$year_joined.bucket)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_smooth(color=year_joined.bucket)
table(pf$year_joined.bucket)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_smooth(color=year_joined.bucket)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_smooth(aes(color=year_joined.bucket))
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_lined(aes(color=year_joined.bucket))
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket),alpha=1/20)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket), fun.y = mean)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket), fun.y = median)
ggplot(aes(x=tenure,y=mean(prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure,y=mean(prop_initiated)),
data=pf)+
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure,y=mean(prop_initiated)),
data=pf)+
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket),
fun.y = mean)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket),
fun.y = median)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket),
stat="summary",
fun.y = median)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_line(aes(color=year_joined.bucket),
stat="summary",
fun.y = median)+
geom_smooth()
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_smooth(aes(color=year_joined.bucket)
ggplot(aes(x=tenure,y=prop_initiated),
data=pf)+
geom_smooth(aes(color=year_joined.bucket))
ggplot(aes(x=tenure,y=prop_initiated),
summary(pf$year_joined.bucket)
largest_prop <- subset(pf,year_joined.bucket == 2012-2014)
summary(largest_prop)
summary(largest_prop$prop_initiated)
largest_prop <- subset(pf,year_joined.bucket == 2012-2014 & !is.na(prop_initiated))
summary(largest_prop$prop_initiated)
summary(largest_prop)
largest_prop <- subset(pf,year_joined.bucket == 2012-2014 & !is.na(prop_initiated))
summary(largest_prop)
largest_prop <- subset(pf,year_joined.bucket == '(2012,2014]' & !is.na(prop_initiated))
summary(largest_prop)
summary(subset(pf,year_joined.bucket == '(2012,2014]')$prop_initiated)
ggplot(aes(x=cut, y = price/carat),
data=diamonds)+
geom_points(aes(color=color))+
facet_wrap(~clarity)
ggplot(aes(x=cut, y = price/carat),
data=diamonds)+
geom_point(aes(color=color))+
facet_wrap(~clarity)
ggplot(aes(x=cut, y = price/carat),
data=diamonds)+
geom_point(aes(color=color))+
facet_wrap(~clarity)+
scale_color_brewer(type='div')
str(diamonds)
?scale_x_discrete()
ggplot(aes(x=cut, y = price/carat),
data=diamonds)+
geom_point(aes(color=color))+
facet_wrap(~clarity)+
scale_color_brewer(type='div')+
scale_x_discrete(cut)
?scale_x_discrete(cut)
ggplot(aes(x=cut, y = price/carat),
data=diamonds)+
geom_point(aes(color=color))+
facet_wrap(~clarity)+
scale_color_brewer(type='div')
?geom_point(aes(color=color))+
?geom_point(aes(color=color))
?geom_point(aes(color=color))
ggplot(aes(x=cut, y = price/carat),
data=diamonds)+
geom_point(aes(color=color),stat='bin')+
facet_wrap(~clarity)+
scale_color_brewer(type='div')
ggplot(aes(x=cut, y = price/carat, stat=bin),
data=diamonds)+
geom_point(aes(color=color))+
facet_wrap(~clarity)+
scale_color_brewer(type='div')
?bin
?aes
?aes
ggplot(aes(x=cut, y = bin(price/carat),
ggplot(aes(x=cut, y = bin(price/carat)),
data=diamonds)+
geom_point(aes(color=color))+
facet_wrap(~clarity)+
scale_color_brewer(type='div')
ggplot(aes(x=cut, y = bin(price/carat)),
data=diamonds)+
geom_point(aes(color=color))+
facet_wrap(~clarity)+
scale_color_brewer(type='div')
?geom_point
ggplot(aes(x=cut, y = price/carat),
data=diamonds)+
geom_jitter(aes(color=color))+
facet_wrap(~clarity)+
scale_color_brewer(type='div')
?geom_jitter
wm <- read.csv('indicator age of marriage.csv')
View(wm)
wm_asean <- subset(wm, X %in% ASEAN)
ASEAN <- c('Indonesia','VietNam', 'Myanmar','Thailand','Singapore',
'Cambodia','Philippines','Brunei','Malaysia')
bucket_year <- c(1616,1900,1990,2000,2005)
wm_asean <- subset(wm, X %in% ASEAN)
head(wm_asean)
colnames(wm_asean) <- seq(1616:2005)
colnames(wm_asean) <- c(1616:2005)
colnames(wm_asean) <- c(1616:2005)
tail(wm_asean)
wm_asean$year <- colMeans(wm_asean, na.rm=T)
wm_year <- as.data.frame(colMeans(wm_asean, na.rm=T))
colnames(wm_asean) <- substr(colnames(wm_asean),start=2,stop=5)
colnames(wm_asean) <- as.numeric(substr(colnames(wm_asean),start=2,stop=5))
wm_asean <- subset(wm, X %in% ASEAN)
colnames(wm_asean) <- as.numeric(substr(colnames(wm_asean),start=2,stop=5))
?col
?fillna
?fill.na
wm_asean[is.na(wm_asean)] <- 0
View(wm_asean)
View(wm_asean)
View(wm_asean)
View(wm_asean)
View(wm)
names(wm_asean)
wm_asean$NA
head(wm_asean)
libray(dplyr)
library(dplyr)
wm <- read.csv('indicator age of marriage.csv')
ASEAN <- c('Indonesia','VietNam', 'Myanmar','Thailand','Singapore',
'Cambodia','Philippines','Brunei','Malaysia')
bucket_year <- c(1616,1900,1990,2000,2005)
wm_asean <- filter(wm_asean,X %in% ASEAN )
wm_asean <- filter(wm,X %in% ASEAN )
dim(wm_asean)
dim(wm_asean$X)
View(wm_asean)
View(wm_asean)
View(wm_asean)
wm_asean <- subset(wm, X %in% ASEAN)
View(wm_asean)
wm_asean <- filter(wm,X %in% ASEAN )
View(wm_asean)
wm_asean[is.na(wm_asean)] <- 0
View(wm_asean)
colnames(wm_asean) <- as.numeric(substr(colnames(wm_asean),start=2,stop=5))
View(wm_asean)
View(wm_asean)
View(wm_asean)
wm_asean_t <- t(wm_asean)
View(wm_asean_t)
?row.names
row.names(wm_asean)
View(wm_asean)
wm_asean <- filter(wm,X %in% ASEAN )
row.names(wm_asean)
row.names(wm_asean$X)
View(wm)
